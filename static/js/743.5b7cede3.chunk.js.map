{"version":3,"file":"static/js/743.5b7cede3.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 600px;\n  margin: 40px auto;\n  border: 3px solid #a4a086;\n  border-radius: 10px;\n  padding: 20px;\n  background-color: #cdc69d;\n  box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n`;\n\nexport const MainTitle = styled.h1`\n  margin: 0 auto 20px;\n  padding: 10px;\n  width: 250px;\n  background-color: #a7a073;\n  font-size: 40px;\n  font-weight: 800;\n  color: #653463;\n  text-align: center;\n  border: 1px solid #653463;\n  border-radius: 15px;\n  box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n\n  :hover {\n    color: #865684;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 20px auto 20px;\n  padding: 10px;\n  width: 200px;\n  border: 1px solid #653463;\n  border-radius: 15px;\n  background-color: #a7a073;\n  font-size: 30px;\n  font-weight: 800;\n  color: #653463;\n  text-align: center;\n  box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n\n  :hover {\n    color: #865684;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContact = styled(Form)`\n  padding: 15px 20px;\n  border: 3px solid #a4a086;\n  border-radius: 10px;\n  box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n`;\n\nexport const Input = styled(Field)`\n    font: inherit;\n    max-width: 320px;\n    color: #653463;\n    background-color: #a7a073;\n    border: 2px solid #653463;\n    border-radius: 10px;\n    margin: 20px auto 20px;\n    padding: 8px;\n    outline: none;\n    font-size: 24px;\n    display: block;\n    box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n}`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 700;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  color: #653463;\n\n  :hover {\n    color: #865684;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  heigth: 50px;\n  padding: 10px;\n  border: 2px solid #653463;\n  border-radius: 10px;\n  margin: 0 auto;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  justify-content: center;\n  background-color: #7e7955;\n  display: flex;\n  color: #653463;\n  box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n\n  :hover {\n    color: #865684;\n    background-color: #a7a073;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  width: 250px;\n  text-align: center;\n  margin: 0 auto 10px;\n  color: red;\n  font-size: 18px;\n`;\n\n// export const Form = styled.form`\n//   padding: 15px 20px;\n//   border: 3px solid #a4a086;\n//   border-radius: 10px;\n//   box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n// `;\n\n// export const Input = styled.input`\n//     font: inherit;\n//     max-width: 320px;\n//     color: #653463;\n//     background-color: #a7a073;\n//     border: 2px solid #653463;\n//     border-radius: 10px;\n//     margin: 20px auto 20px;\n//     padding: 8px;\n//     outline: none;\n//     font-size: 24px;\n//     display: block;\n//     box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n// }`;\n\n// export const Label = styled.label`\n//   font-size: 24px;\n//   font-weight: 700;\n//   align-items: center;\n//   justify-content: center;\n//   display: flex;\n//   color: #653463;\n\n//   :hover {\n//     color: #865684;\n//   }\n// `;\n\n// export const Button = styled.button`\n//   width: 200px;\n//   heigth: 50px;\n//   padding: 10px;\n//   border: 2px solid #653463;\n//   border-radius: 10px;\n//   margin: 0 auto;\n//   font-size: 20px;\n//   font-weight: 700;\n//   text-align: center;\n//   justify-content: center;\n//   background-color: #7e7955;\n//   display: flex;\n//   color: #653463;\n//   box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n\n//   :hover {\n//     color: #865684;\n//     background-color: #a7a073;\n//   }\n// `;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { Button, Error, FormContact, Input, Label } from './ContactForm.styled';\n// import { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Name is a required field!!!'),\n  number: yup.string().required('Number is a required field!!!'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const ContactForm = () => {\n  //const contacts = useSelector(selectContacts);\n  //const contacts = useSelector(store => store.contacts.contacts.items);\n  // const contacts = useSelector(store => store);\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  console.log(contacts);\n  const dispatch = useDispatch();\n\n  const isDublicate = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().trim();\n    const normalizedNumber = number.trim();\n\n    const dublicate = contacts.find(\n      contact =>\n        contact.name.toLowerCase().trim() === normalizedName ||\n        contact.number.trim() === normalizedNumber\n    );\n    return Boolean(dublicate);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { resetForm }) => {\n        const onAddContact = ({ name, number, id = nanoid() }) => {\n          if (isDublicate({ name, number, id })) {\n            // return alert('This contact is already in contacts');\n            return toast.error(`This contact is already in contacts`);\n          }\n          dispatch(addContact({ id, name, number }));\n\n          resetForm();\n        };\n\n        onAddContact({ ...values });\n      }}\n      validationSchema={schema}\n    >\n      <FormContact autoComplete=\"off\">\n        <Label htmlFor={nameInputId}>Name</Label>\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n        <Error name=\"name\" component=\"div\" />\n\n        <Label htmlFor={numberInputId}>Number</Label>\n        <Input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"123-45-67\"\n        />\n        <Error name=\"number\" component=\"div\" />\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  // justify-content: space-evenly;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  color: #653463;\n  margin: 0;\n  margin-right: 20px;\n\n  :hover {\n    color: #865684;\n  }\n`;\n\nexport const Btn = styled.button`\n  width: 150px;\n  heigth: 50px;\n  padding: 10px;\n  border: 2px solid #653463;\n  border-radius: 10px;\n  // margin: 0 auto;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  justify-content: center;\n  background-color: #7e7955;\n  display: flex;\n  color: #653463;\n  box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n\n  :hover {\n    color: #865684;\n    background-color: #a7a073;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn, Item, Text } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Item>\n      <Text>\n        {name} : {number}\n      </Text>\n\n      <Btn onClick={onDelete}>Delete</Btn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListContasts = styled.ul`\n   width: 550px;\n    padding: 20px;\n    margin: 20px  auto 0;\n    margin-right: 0;\n    margin-left: 0;\n    border: 1px solid  #a4a086;\n    border-radius: 15px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 20px;\n\n    box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n}\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\n// export const selectIsLoading = state => state.contacts.isLoading;\n// export const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem';\nimport { ListContasts } from './ContactList.styled';\n\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { connect } from 'formik';\n\nexport const ContactList = () => {\n  //const contacts = useSelector(selectContacts);\n  //const contacts = useSelector(store => store.contacts.items);\n  //const contacts = useSelector(store => store.contacts.contacts.items);\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  console.log(contacts);\n  //const filter = useSelector(selectFilter);\n  // const filter = useSelector(store => store.filter);\n  const filter = useSelector(state => state.contacts.filter);\n  console.log(filter);\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  console.log(filteredContacts);\n\n  const store = useSelector(store => store);\n  console.log('store:', store);\n  const contactsStore = useSelector(store => store.contacts);\n  console.log('contactsStore:', contactsStore);\n  const contactsStoreContacts = useSelector(store => store.contacts.items);\n  console.log('contactsStoreContacts:', contactsStoreContacts);\n  const contactsItemStor = useSelector(store => store.contacts.contacts.items);\n  console.log(contactsItemStor);\n\n  // return (\n  //   <ListContasts>\n  //     {contacts &&\n  //       contacts.map(({ id, name, number }) => (\n  //         <ContactItem key={id} id={id} name={name} number={number} />\n  //       ))}\n  //   </ListContasts>\n  // );\n\n  return (\n    <ListContasts>\n      {filteredContacts &&\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n    </ListContasts>\n  );\n};\nconst mapStateToProps = state => ({\n  contacts: selectContacts(state),\n  filter: selectFilter(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n\nContactList.propTypes = {\n  contacs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const Input = styled.input`\n    font: inherit;\n    max-width: 320px;\n    color: #653463;\n    background-color: #a7a073;\n    border: 2px solid #653463;\n    border-radius: 10px;\n    padding: 8px;\n    outline: none;\n    font-size: 24px;\n    display: block;\n    box-shadow: 0px 0px 13px -1px rgba(43, 43, 59, 0.59);\n    margin-right: 0;\n    \n}`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 700;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  color: #653463;\n\n  :hover {\n    color: #865684;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { ContainerFilter, Input, Label } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\n// import { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  //const filter = useSelector(selectFilter);\n  const filter = useSelector(state => state.contacts.contacts.filter);\n\n  //const filter = useSelector(store => store.filter);\n  console.log(filter);\n\n  const inputId = nanoid();\n  const handlerChangeFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <ContainerFilter>\n      <Label htmlFor={inputId}> Find contacts by name :</Label>\n      <Input\n        type=\"text\"\n        value={filter}\n        name=\"input\"\n        id={inputId}\n        onChange={handlerChangeFilter}\n        placeholder=\"Search...\"\n      />\n    </ContainerFilter>\n  );\n};\n","import { Container, MainTitle, Title } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n\n      {isLoading && !error && (\n        <p\n          style={{\n            fontSize: 24,\n            fontWeight: 600,\n            color: '#653463',\n            textAlign: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <i>Request in progress...</i>\n        </p>\n      )}\n\n      {error && <b>Error: {error}</b>}\n      <ContactList />\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","MainTitle","Title","FormContact","Form","Input","Field","Label","Button","Error","ErrorMessage","schema","yup","shape","name","required","number","initialValues","nameInputId","nanoid","numberInputId","ContactForm","contacts","useSelector","state","items","console","log","dispatch","useDispatch","onSubmit","values","resetForm","id","normalizedName","toLowerCase","trim","normalizedNumber","dublicate","find","contact","Boolean","isDublicate","toast","addContact","onAddContact","validationSchema","autoComplete","htmlFor","type","pattern","title","placeholder","component","Item","Text","Btn","ContactItem","onClick","deleteContact","ListContasts","selectContacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactList","filteredContacts","includes","store","contactsStore","contactsStoreContacts","contactsItemStor","map","ContainerFilter","connect","Filter","inputId","value","onChange","e","setFilter","target","useEffect","fetchContacts","style","fontSize","fontWeight","color","textAlign","justifyContent"],"sourceRoot":""}