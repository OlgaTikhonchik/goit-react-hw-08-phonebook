{"version":3,"file":"static/js/432.736ac9c4.chunk.js","mappings":"iOA4IA,UArIqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAsBD,OAnCuBC,EAAAA,EAAAA,KAAfC,YAoCC,SAAC,KAAD,CAAUC,GAAG,eAIpB,UAAC,SAAD,CAAUC,GAAI,CAAEC,SAAU,MAAOC,OAAQ,IAAKC,gBAAiB,WAA/D,WACE,SAAC,cAAD,CACEH,GAAI,CAAEE,OAAQ,KACdE,MAAM,2FACNC,MAAM,cAER,4BACE,eAAIC,MAAO,CAAEC,MAAO,WAApB,mCACA,kBAAMC,SAjCS,SAAAC,GACnBA,EAAMC,iBACNzB,GAAS0B,EAAAA,EAAAA,IAAS,CAAEvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAC9BoB,SACAC,MAAK,WACJxB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,IACAqB,OAAM,SAAAC,GAEL,MADAC,MAAM,qCACA,IAAIC,MAAMF,EAAMG,QACvB,GAMJ,EAemCZ,MAAO,CAAEa,MAAO,KAA9C,WACE,kBACEC,QAAQ,GACRd,MAAO,CACLe,QAAS,OACTC,cAAe,SACfC,aAAc,GACdC,WAAY,IANhB,UAUE,SAAC,cAAD,CACEC,MAAM,OACNC,SAAO,EACPC,UAAQ,EACRC,KAAK,OACLxC,KAAK,OACLQ,MAAOR,EACPyC,SAAUnC,EACVoC,YAAY,wBAIhB,kBACEV,QAAQ,GACRd,MAAO,CACLe,QAAS,OACTC,cAAe,SACfC,aAAc,GACdC,WAAY,IANhB,UAUE,SAAC,cAAD,CACEC,MAAM,QACNC,SAAO,EACPC,UAAQ,EACRC,KAAK,QACLxC,KAAK,QACLQ,MAAON,EACPuC,SAAUnC,EACVoC,YAAY,yBAGhB,kBACEV,QAAQ,GACRd,MAAO,CACLe,QAAS,OACTC,cAAe,SACfC,aAAc,GACdC,WAAY,IANhB,UAUE,SAAC,cAAD,CACEC,MAAM,WACNC,SAAO,EACPC,UAAQ,EACRC,KAAK,WACLxC,KAAK,WACLQ,MAAOJ,EACPqC,SAAUnC,EACVoC,YAAY,4BAIhB,UAAC,WAAD,CACE9B,GAAI,CAAEuB,aAAc,GACpBQ,QAAQ,YACRxB,MAAM,UACNqB,KAAK,SAJP,qBAMW,eAMpB,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operationsAuth';\nimport MUI from 'components/MUI';\nimport { useAuth } from 'hooks/useAuth';\nimport { Navigate } from 'react-router-dom';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { isLoggedIn } = useAuth();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(register({ name, email, password }))\n      .unwrap()\n      .then(() => {\n        setName('');\n        setEmail('');\n        setPassword('');\n      })\n      .catch(error => {\n        alert('Entered incorrect data, try again');\n        throw new Error(error.message);\n      });\n\n    // dispatch(register({ name, email, password }));\n    // setName('');\n    // setEmail('');\n    // setPassword('');\n  };\n\n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <MUI.Card sx={{ maxWidth: '50%', height: 850, backgroundColor: '#bba095' }}>\n      <MUI.CardMedia\n        sx={{ height: 450 }}\n        image=\"https://www.pngkey.com/png/detail/203-2035339_register-user-register-online-icon-png.png\"\n        title=\"register\"\n      />\n      <div>\n        <h1 style={{ color: '#653463' }}>Page of registration</h1>\n        <form onSubmit={handleSubmit} style={{ width: 450 }}>\n          <label\n            htmlFor=\"\"\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              marginBottom: 30,\n              marginLeft: 30,\n            }}\n          >\n            {/* Name */}\n            <MUI.TextField\n              label=\"Name\"\n              focused\n              required\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              placeholder=\"Choose your Name\"\n            />\n          </label>\n\n          <label\n            htmlFor=\"\"\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              marginBottom: 30,\n              marginLeft: 30,\n            }}\n          >\n            {/* Email */}\n            <MUI.TextField\n              label=\"Email\"\n              focused\n              required\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Choose your Email\"\n            />\n          </label>\n          <label\n            htmlFor=\"\"\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              marginBottom: 30,\n              marginLeft: 30,\n            }}\n          >\n            {/* Password */}\n            <MUI.TextField\n              label=\"Password\"\n              focused\n              required\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"Choose your Password\"\n            />\n          </label>\n\n          <MUI.Button\n            sx={{ marginBottom: 3 }}\n            variant=\"contained\"\n            color=\"success\"\n            type=\"submit\"\n          >\n            Register{' '}\n          </MUI.Button>\n        </form>\n      </div>\n    </MUI.Card>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","useAuth","isLoggedIn","to","sx","maxWidth","height","backgroundColor","image","title","style","color","onSubmit","event","preventDefault","register","unwrap","then","catch","error","alert","Error","message","width","htmlFor","display","flexDirection","marginBottom","marginLeft","label","focused","required","type","onChange","placeholder","variant"],"sourceRoot":""}